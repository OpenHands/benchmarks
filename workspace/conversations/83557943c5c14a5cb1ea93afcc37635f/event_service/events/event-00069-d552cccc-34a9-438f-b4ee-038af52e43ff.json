{"kind": "ObservationEvent", "id": "d552cccc-34a9-438f-b4ee-038af52e43ff", "timestamp": "2025-09-25T20:07:05.790602", "source": "environment", "tool_name": "str_replace_editor", "tool_call_id": "toolu_01ESwGvmQo8u7uqaP3oEpyYE", "observation": {"kind": "StrReplaceEditorObservation", "command": "view", "output": "Here's the result of running `cat -n` on /tmp/tmpkelcrhj5/astropy/astropy/io/fits/tests/test_diff.py:\n     1\t# Licensed under a 3-clause BSD style license - see LICENSE.rst\n     2\timport numpy as np\n     3\timport pytest\n     4\t\n     5\tfrom astropy.io import fits\n     6\tfrom astropy.io.fits.column import Column\n     7\tfrom astropy.io.fits.diff import (\n     8\t    FITSDiff,\n     9\t    HDUDiff,\n    10\t    HeaderDiff,\n    11\t    ImageDataDiff,\n    12\t    TableDataDiff,\n    13\t)\n    14\tfrom astropy.io.fits.hdu import HDUList, ImageHDU, PrimaryHDU\n    15\tfrom astropy.io.fits.hdu.base import NonstandardExtHDU\n    16\tfrom astropy.io.fits.hdu.table import BinTableHDU\n    17\tfrom astropy.io.fits.header import Header\n    18\tfrom astropy.utils.misc import _NOT_OVERWRITING_MSG_MATCH\n    19\t\n    20\tfrom .conftest import FitsTestCase\n    21\t\n    22\t\n    23\tclass DummyNonstandardExtHDU(NonstandardExtHDU):\n    24\t    def __init__(self, data=None, *args, **kwargs):\n    25\t        super().__init__(self, *args, **kwargs)\n    26\t        self._buffer = np.asarray(data).tobytes()\n    27\t        self._data_offset = 0\n    28\t\n    29\t    @property\n    30\t    def size(self):\n    31\t        return len(self._buffer)\n    32\t\n    33\t\n    34\tclass TestDiff(FitsTestCase):\n    35\t    def test_identical_headers(self):\n    36\t        ha = Header([(\"A\", 1), (\"B\", 2), (\"C\", 3)])\n    37\t        hb = ha.copy()\n    38\t        assert HeaderDiff(ha, hb).identical\n    39\t        assert HeaderDiff(ha.tostring(), hb.tostring()).identical\n    40\t\n    41\t        with pytest.raises(TypeError):\n    42\t            HeaderDiff(1, 2)\n    43\t\n    44\t    def test_slightly_different_headers(self):\n    45\t        ha = Header([(\"A\", 1), (\"B\", 2), (\"C\", 3)])\n    46\t        hb = ha.copy()\n    47\t        hb[\"C\"] = 4\n    48\t        assert not HeaderDiff(ha, hb).identical\n    49\t\n    50\t    def test_common_keywords(self):\n", "path": "/tmp/tmpkelcrhj5/astropy/astropy/io/fits/tests/test_diff.py", "prev_exist": true}, "action_id": "53d40868-151e-46a3-9f48-c7cc75fb109f"}