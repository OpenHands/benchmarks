{"kind": "ObservationEvent", "id": "a1013259-c708-4785-bd06-9424fe5926b4", "timestamp": "2025-09-26T01:22:24.906028", "source": "environment", "tool_name": "str_replace_editor", "tool_call_id": "toolu_01BJE17EgpSBCHu8vd2LJKrx", "observation": {"kind": "StrReplaceEditorObservation", "command": "view", "output": "Here's the result of running `cat -n` on /tmp/tmpzv9aq_xa/astropy/astropy/io/fits/tests/test_table.py:\n  1000\t        assert hdu.data[0][1] == 80\n  1001\t\n  1002\t        t1.close()\n  1003\t        t2.close()\n  1004\t        hdul.close()\n  1005\t\n  1006\t    def test_modify_column_attributes(self):\n  1007\t        \"\"\"Regression test for https://github.com/astropy/astropy/issues/996\n  1008\t\n  1009\t        This just tests one particular use case, but it should apply pretty\n  1010\t        well to other similar cases.\n  1011\t        \"\"\"\n  1012\t\n  1013\t        NULLS = {\"a\": 2, \"b\": \"b\", \"c\": 2.3}\n  1014\t\n  1015\t        data = np.array(\n  1016\t            list(zip([1, 2, 3, 4], [\"a\", \"b\", \"c\", \"d\"], [2.3, 4.5, 6.7, 8.9])),\n  1017\t            dtype=[(\"a\", int), (\"b\", \"S1\"), (\"c\", float)],\n  1018\t        )\n  1019\t\n  1020\t        b = fits.BinTableHDU(data=data)\n  1021\t        for col in b.columns:\n  1022\t            col.null = NULLS[col.name]\n  1023\t\n  1024\t        b.writeto(self.temp(\"test.fits\"), overwrite=True)\n  1025\t\n  1026\t        with fits.open(self.temp(\"test.fits\")) as hdul:\n  1027\t            header = hdul[1].header\n  1028\t            assert header[\"TNULL1\"] == 2\n  1029\t            assert header[\"TNULL2\"] == \"b\"\n  1030\t            assert header[\"TNULL3\"] == 2.3\n  1031\t\n  1032\t    def test_multidimension_table_from_numpy_rec_columns(self):\n  1033\t        \"\"\"Regression test for https://github.com/astropy/astropy/issues/5280\n  1034\t        and https://github.com/astropy/astropy/issues/5287\n  1035\t\n  1036\t        multidimentional tables can now be written with the correct TDIM.\n  1037\t        Author: Stephen Bailey.\n  1038\t        \"\"\"\n  1039\t\n  1040\t        dtype = [\n  1041\t            (\"x\", (str, 5)),  # 1D column of 5-character strings\n  1042\t            (\"y\", (str, 3), (4,)),  # 2D column; each row is four 3-char strings\n  1043\t        ]\n  1044\t        data = np.zeros(2, dtype=dtype)\n  1045\t        data[\"x\"] = [\"abcde\", \"xyz\"]\n  1046\t        data[\"y\"][0] = [\"A\", \"BC\", \"DEF\", \"123\"]\n  1047\t        data[\"y\"][1] = [\"X\", \"YZ\", \"PQR\", \"999\"]\n  1048\t        table = Table(data)\n  1049\t\n  1050\t        # Test convenience functions io.fits.writeto / getdata\n", "path": "/tmp/tmpzv9aq_xa/astropy/astropy/io/fits/tests/test_table.py", "prev_exist": true}, "action_id": "a07bcf26-64fa-4cef-b577-44f5de306b49"}