{"kind": "ObservationEvent", "id": "18605db7-92cb-46a2-b61e-5bd230e72e42", "timestamp": "2025-09-25T19:00:58.346838", "source": "environment", "tool_name": "str_replace_editor", "tool_call_id": "toolu_01XzfhD53pE7dqFuR9DuM123", "observation": {"kind": "StrReplaceEditorObservation", "command": "view", "output": "Here's the result of running `cat -n` on /tmp/tmpvq5i4eh4/astropy/astropy/io/fits/diff.py:\n  1227\tclass TableDataDiff(_BaseDiff):\n  1228\t    \"\"\"\n  1229\t    Diff two table data arrays. It doesn't matter whether the data originally\n  1230\t    came from a binary or ASCII table--the data should be passed in as a\n  1231\t    recarray.\n  1232\t\n  1233\t    `TableDataDiff` objects have the following diff attributes:\n  1234\t\n  1235\t    - ``diff_column_count``: If the tables being compared have different\n  1236\t      numbers of columns, this contains a 2-tuple of the column count in each\n  1237\t      table.  Even if the tables have different column counts, an attempt is\n  1238\t      still made to compare any columns they have in common.\n  1239\t\n  1240\t    - ``diff_columns``: If either table contains columns unique to that table,\n  1241\t      either in name or format, this contains a 2-tuple of lists. The first\n  1242\t      element is a list of columns (these are full `Column` objects) that\n  1243\t      appear only in table a.  The second element is a list of tables that\n  1244\t      appear only in table b.  This only lists columns with different column\n  1245\t      definitions, and has nothing to do with the data in those columns.\n  1246\t\n  1247\t    - ``diff_column_names``: This is like ``diff_columns``, but lists only the\n  1248\t      names of columns unique to either table, rather than the full `Column`\n  1249\t      objects.\n  1250\t\n  1251\t    - ``diff_column_attributes``: Lists columns that are in both tables but\n  1252\t      have different secondary attributes, such as TUNIT or TDISP.  The format\n  1253\t      is a list of 2-tuples: The first a tuple of the column name and the\n  1254\t      attribute, the second a tuple of the different values.\n  1255\t\n  1256\t    - ``diff_values``: `TableDataDiff` compares the data in each table on a\n  1257\t      column-by-column basis.  If any different data is found, it is added to\n  1258\t      this list.  The format of this list is similar to the ``diff_pixels``\n  1259\t      attribute on `ImageDataDiff` objects, though the \"index\" consists of a\n  1260\t      (column_name, row) tuple.  For example::\n  1261\t\n  1262\t          [('TARGET', 0), ('NGC1001', 'NGC1002')]\n  1263\t\n  1264\t      shows that the tables contain different values in the 0-th row of the\n  1265\t      'TARGET' column.\n  1266\t\n  1267\t    - ``diff_total`` and ``diff_ratio``: Same as `ImageDataDiff`.\n  1268\t\n  1269\t    `TableDataDiff` objects also have a ``common_columns`` attribute that lists\n  1270\t    the `Column` objects for columns that are identical in both tables, and a\n  1271\t    ``common_column_names`` attribute which contains a set of the names of\n  1272\t    those columns.\n  1273\t    \"\"\"\n  1274\t\n  1275\t    def __init__(self, a, b, ignore_fields=[], numdiffs=10, rtol=0.0, atol=0.0):\n  1276\t        \"\"\"\n  1277\t        Parameters\n  1278\t        ----------\n  1279\t        a : BaseHDU\n  1280\t            An HDU object.\n  1281\t\n  1282\t        b : BaseHDU\n  1283\t            An HDU object to compare to the first HDU object.\n  1284\t\n  1285\t        ignore_fields : sequence, optional\n  1286\t            The (case-insensitive) names of any table columns to ignore if any\n  1287\t            table data is to be compared.\n  1288\t\n  1289\t        numdiffs : int, optional\n  1290\t            The number of pixel/table values to output when reporting HDU data\n  1291\t            differences.  Though the count of differences is the same either\n  1292\t            way, this allows controlling the number of different values that\n  1293\t            are kept in memory or output.  If a negative value is given, then\n  1294\t            numdiffs is treated as unlimited (default: 10).\n  1295\t\n  1296\t        rtol : float, optional\n  1297\t            The relative difference to allow when comparing two float values\n  1298\t            either in header values, image arrays, or table columns\n  1299\t            (default: 0.0). Values which satisfy the expression\n  1300\t\n  1301\t            .. math::\n  1302\t\n  1303\t                \\\\left| a - b \\\\right| > \\\\text{atol} + \\\\text{rtol} \\\\cdot \\\\left| b \\\\right|\n  1304\t\n  1305\t            are considered to be different.\n  1306\t            The underlying function used for comparison is `numpy.allclose`.\n  1307\t\n  1308\t            .. versionadded:: 2.0\n  1309\t\n  1310\t        atol : float, optional\n  1311\t            The allowed absolute difference. See also ``rtol`` parameter.\n  1312\t\n  1313\t            .. versionadded:: 2.0\n  1314\t        \"\"\"\n  1315\t        self.ignore_fields = set(ignore_fields)\n  1316\t        self.numdiffs = numdiffs\n  1317\t        self.rtol = rtol\n  1318\t        self.atol = atol\n  1319\t\n  1320\t        self.common_columns = []\n  1321\t        self.common_column_names = set()\n  1322\t\n  1323\t        # self.diff_columns contains columns with different column definitions,\n  1324\t        # but not different column data. Column data is only compared in\n  1325\t        # columns that have the same definitions\n  1326\t        self.diff_rows = ()\n  1327\t        self.diff_column_count = ()\n  1328\t        self.diff_columns = ()\n  1329\t\n  1330\t        # If two columns have the same name+format, but other attributes are\n  1331\t        # different (such as TUNIT or such) they are listed here\n  1332\t        self.diff_column_attributes = []\n  1333\t\n  1334\t        # Like self.diff_columns, but just contains a list of the column names\n  1335\t        # unique to each table, and in the order they appear in the tables\n  1336\t        self.diff_column_names = ()\n  1337\t        self.diff_values = []\n  1338\t\n  1339\t        self.diff_ratio = 0\n  1340\t        self.diff_total = 0\n  1341\t\n  1342\t        super().__init__(a, b)\n  1343\t\n  1344\t    def _diff(self):\n  1345\t        # Much of the code for comparing columns is similar to the code for\n  1346\t        # comparing headers--consider refactoring\n  1347\t        colsa = self.a.columns\n  1348\t        colsb = self.b.columns\n  1349\t\n  1350\t        if len(colsa) != len(colsb):\n", "path": "/tmp/tmpvq5i4eh4/astropy/astropy/io/fits/diff.py", "prev_exist": true}, "action_id": "26ee09cc-27df-4fc8-82d6-f293c889cfe0"}