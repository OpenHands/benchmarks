{"kind": "ObservationEvent", "id": "41173bec-a602-49aa-b064-d6469c8c5ead", "timestamp": "2025-09-25T11:23:52.057561", "source": "environment", "tool_name": "execute_bash", "tool_call_id": "toolu_01MG9vG9FF5BWV6EGK1L5pzC", "observation": {"kind": "ExecuteBashObservation", "output": "commit ad1c98905b2776c1446c0e054207860b973375d1\nAuthor: Stuart Mumford <stuart@mumford.me.uk>\nDate:   Tue Mar 1 17:45:47 2022 +0000\n\n    Allow a model to override calculation of it's separability matrix\n\ndiff --git a/astropy/modeling/core.py b/astropy/modeling/core.py\nindex 1cd0abe8ab..da4352cb0c 100644\n--- a/astropy/modeling/core.py\n+++ b/astropy/modeling/core.py\n@@ -805,6 +805,15 @@ class Model(metaclass=_ModelMeta):\n\n         return self.__class__.n_outputs\n\n+    def _calculate_separability_matrix(self):\n+        \"\"\"\n+        This is a hook which customises the behavior of modeling.separable.\n+\n+        This allows complex subclasses to customise the separability matrix.\n+        If it returns `NotImplemented` the default behavior is used.\n+        \"\"\"\n+        return NotImplemented\n+\n     def _initialize_unit_support(self):\n         \"\"\"\n         Convert self._input_units_strict and\ndiff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py\nindex 965b987fb9..a308e27297 100644\n--- a/astropy/modeling/separable.py\n+++ b/astropy/modeling/separable.py\n@@ -301,7 +301,9 @@ def _separable(transform):\n         An array of shape (transform.n_outputs,) of boolean type\n         Each element represents the separablity of the corresponding output.\n     \"\"\"\n-    if isinstance(transform, CompoundModel):\n+    if (transform_matrix := transform._calculate_separability_matrix()) is not NotImplemented:\n+        return transform_matrix\n+    elif isinstance(transform, CompoundModel):\n         sepleft = _separable(transform.left)\n         sepright = _separable(transform.right)\n         return _operators[transform.op](sepleft, sepright)\ndiff --git a/astropy/modeling/tests/test_models.py b/astropy/modeling/tests/test_models.py\nindex 732a35a246..3ae2e0e46c 100644\n--- a/astropy/modeling/tests/test_models.py\n+++ b/astropy/modeling/tests/test_models.py\n@@ -16,11 +16,12 @@ from astropy import units as u\n from astropy.modeling import fitting, models\n from astropy.modeling.models import Gaussian2D\n from astropy.modeling.bounding_box import ModelBoundingBox\n-from astropy.modeling.core import FittableModel, _ModelMeta\n+from astropy.modeling.core import FittableModel, _ModelMeta, Model\n from astropy.modeling.parameters import Parameter\n from astropy.modeling.polynomial import PolynomialBase\n from astropy.modeling.powerlaws import SmoothlyBrokenPowerLaw1D\n from astropy.modeling.parameters import InputParameterError\n+from astropy.modeling.separable import separability_matrix\n from astropy.tests.helper import assert_quantity_allclose\n from astropy.utils import NumpyRNGContext\n from astropy.utils.compat.optional_deps import HAS_SCIPY  # noqa\n@@ -1055,3 +1056,26 @@ def test_submetaclass_kwargs():\n             pass\n\n     assert ClassModel.flag == \"flag\"\n+\n+\n+class ModelDefault(Model):\n+    slope = Parameter()\n+    intercept = Parameter()\n+    _separable = False\n+\n+    @staticmethod\n+    def evaluate(x, slope, intercept):\n+        return slope * x + intercept\n+\n+\n+class ModelCustom(ModelDefault):\n+    def _calculate_separability_matrix(self):\n+        return np.array([[0, ]])\n+\n+\n+def test_custom_separability_matrix():\n+    original = separability_matrix(ModelDefault(slope=1, intercept=2))\n+    assert original.all()\n+\n+    custom = separability_matrix(ModelCustom(slope=1, intercept=2))\n+    assert not custom.any()", "command": "cd /tmp/tmpqboi531g/astropy && git show ad1c98905b", "error": false, "timeout": false, "metadata": {"exit_code": 0, "pid": -1, "username": "juan-all-hands", "hostname": "juan-dev", "working_dir": "/tmp/tmpqboi531g/astropy", "py_interpreter_path": "/home/juan-all-hands/v1/benchmarks/.venv/bin/python", "prefix": "", "suffix": "\n[The command completed with exit code 0.]"}}, "action_id": "78b8633e-7837-48e5-aff7-6e89cbfa003f"}