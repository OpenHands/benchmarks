{"kind": "ObservationEvent", "id": "31879486-dbbb-441e-8582-de421063d211", "timestamp": "2025-09-25T11:26:52.268535", "source": "environment", "tool_name": "str_replace_editor", "tool_call_id": "toolu_012r314oNkt4CcnC3gVWBGDu", "observation": {"kind": "StrReplaceEditorObservation", "command": "view", "output": "Here's the result of running `cat -n` on /tmp/tmp_qu0p03y/astropy/astropy/coordinates/tests/test_sky_coord.py:\n     1\t# Licensed under a 3-clause BSD style license - see LICENSE.rst\n     2\t\n     3\t\"\"\"\n     4\tTests for the SkyCoord class.  Note that there are also SkyCoord tests in\n     5\ttest_api_ape5.py\n     6\t\"\"\"\n     7\t\n     8\timport copy\n     9\tfrom copy import deepcopy\n    10\t\n    11\timport numpy as np\n    12\timport numpy.testing as npt\n    13\timport pytest\n    14\tfrom erfa import ErfaWarning\n    15\t\n    16\tfrom astropy import units as u\n    17\tfrom astropy.coordinates import (\n    18\t    FK4,\n    19\t    FK5,\n    20\t    GCRS,\n    21\t    ICRS,\n    22\t    AltAz,\n    23\t    Angle,\n    24\t    Attribute,\n    25\t    BaseCoordinateFrame,\n    26\t    CartesianRepresentation,\n    27\t    EarthLocation,\n    28\t    Galactic,\n    29\t    Latitude,\n    30\t    RepresentationMapping,\n    31\t    SkyCoord,\n    32\t    SphericalRepresentation,\n    33\t    UnitSphericalRepresentation,\n    34\t    frame_transform_graph,\n    35\t)\n    36\tfrom astropy.coordinates.representation import (\n    37\t    DUPLICATE_REPRESENTATIONS,\n    38\t    REPRESENTATION_CLASSES,\n    39\t)\n    40\tfrom astropy.coordinates.tests.helper import skycoord_equal\n    41\tfrom astropy.coordinates.transformations import FunctionTransform\n    42\tfrom astropy.io import fits\n    43\tfrom astropy.tests.helper import assert_quantity_allclose as assert_allclose\n    44\tfrom astropy.time import Time\n    45\tfrom astropy.units import allclose as quantity_allclose\n    46\tfrom astropy.utils import isiterable\n    47\tfrom astropy.utils.compat.optional_deps import HAS_SCIPY\n    48\tfrom astropy.wcs import WCS\n    49\t\n    50\tRA = 1.0 * u.deg\n", "path": "/tmp/tmp_qu0p03y/astropy/astropy/coordinates/tests/test_sky_coord.py", "prev_exist": true}, "action_id": "7f34496b-b945-40f2-a2ce-8e6b5ce863d8"}