{"kind": "ObservationEvent", "id": "173b14b4-9731-4b91-a0d4-acc05f9aa629", "timestamp": "2025-09-26T01:29:27.778522", "source": "environment", "tool_name": "execute_bash", "tool_call_id": "toolu_01MM6C3tZ7RkDYJ4h6CG4irc", "observation": {"kind": "ExecuteBashObservation", "output": "599-        assert \"Column A data differs in row 0:\\n    a> True\\n    b> False\" in report\n600-        assert \"...and at 1 more indices.\\n Column D data differs in row 0:\" in report\n601-        assert \"13 different table data element(s) found (65.00% different)\" in report\n602-        assert report.count(\"more indices\") == 1\n603-\n604:    def test_identical_files_basic(self):\n605:        \"\"\"Test identicality of two simple, extensionless files.\"\"\"\n606-\n607-        a = np.arange(100).reshape(10, 10)\n608-        hdu = PrimaryHDU(data=a)\n609-        hdu.writeto(self.temp(\"testa.fits\"))\n610-        hdu.writeto(self.temp(\"testb.fits\"))\n611-        diff = FITSDiff(self.temp(\"testa.fits\"), self.temp(\"testb.fits\"))\n612-        assert diff.identical\n613-\n614-        report = diff.report()\n615-        # Primary HDUs should contain no differences\n616-        assert \"Primary HDU\" not in report\n617-        assert \"Extension HDU\" not in report\n618-        assert \"No differences found.\" in report\n619-\n620-        a = np.arange(10)\n621-        ehdu = ImageHDU(data=a)\n622-        diff = HDUDiff(ehdu, ehdu)\n623-        assert diff.identical\n624-        report = diff.report()\n625-        assert \"No differences found.\" in report\n626-\n627:    def test_partially_identical_files1(self):\n628-        \"\"\"\n629-        Test files that have some identical HDUs but a different extension\n630-        count.\n631-        \"\"\"\n632-\n633-        a = np.arange(100).reshape(10, 10)\n634-        phdu = PrimaryHDU(data=a)\n635-        ehdu = ImageHDU(data=a)\n636-        hdula = HDUList([phdu, ehdu])\n637-        hdulb = HDUList([phdu, ehdu, ehdu])\n638-        diff = FITSDiff(hdula, hdulb)\n639-        assert not diff.identical\n640-        assert diff.diff_hdu_count == (2, 3)\n641-\n642-        # diff_hdus should be empty, since the third extension in hdulb\n643-        # has nothing to compare against\n644-        assert diff.diff_hdus == []\n645-\n646-        report = diff.report()\n647-        assert \"Files contain different numbers of HDUs\" in report\n648-        assert \"a: 2\\n b: 3\" in report\n649-        assert \"No differences found between common HDUs\" in report\n650-\n651:    def test_partially_identical_files2(self):\n652-        \"\"\"\n653-        Test files that have some identical HDUs but one different HDU.\n654-        \"\"\"\n655-\n656-        a = np.arange(100).reshape(10, 10)\n657-        phdu = PrimaryHDU(data=a)\n658-        ehdu = ImageHDU(data=a)\n659-        ehdu2 = ImageHDU(data=(a + 1))\n660-        hdula = HDUList([phdu, ehdu, ehdu])\n661-        hdulb = HDUList([phdu, ehdu2, ehdu])\n662-        diff = FITSDiff(hdula, hdulb)\n663-\n664-        assert not diff.identical\n665-        assert diff.diff_hdu_count == ()\n666-        assert len(diff.diff_hdus) == 1\n667-        assert diff.diff_hdus[0][0] == 1\n668-\n669-        hdudiff = diff.diff_hdus[0][1]\n670-        assert not hdudiff.identical\n671-        assert hdudiff.diff_extnames == ()\n--\n692-        assert \"Data contains differences\" in report\n693-        for y in range(10):\n694-            assert f\"Data differs at [{y + 1}, 1]\" in report\n695-        assert \"100 different pixels found (100.00% different).\" in report\n696-\n697:    def test_partially_identical_files3(self):\n698-        \"\"\"\n699-        Test files that have some identical HDUs but a different extension\n700-        name.\n701-        \"\"\"\n702-\n703-        phdu = PrimaryHDU()\n704-        ehdu = ImageHDU(name=\"FOO\")\n705-        hdula = HDUList([phdu, ehdu])\n706-        ehdu = BinTableHDU(name=\"BAR\")\n707-        ehdu.header[\"EXTVER\"] = 2\n708-        ehdu.header[\"EXTLEVEL\"] = 3\n709-        hdulb = HDUList([phdu, ehdu])\n710-        diff = FITSDiff(hdula, hdulb)\n711-        assert not diff.identical\n712-\n713-        assert diff.diff_hdus[0][0] == 1\n714-\n715-        hdu_diff = diff.diff_hdus[0][1]\n716-        assert hdu_diff.diff_extension_types == (\"IMAGE\", \"BINTABLE\")\n717-        assert hdu_diff.diff_extnames == (\"FOO\", \"BAR\")\n--\n851-            assert f\"Data differs at byte {i}:\" in report\n852-        assert \"2 different bytes found (2.00% different).\" in report\n853-\n854-\n855-def test_fitsdiff_hdu_name(tmp_path):\n856:    \"\"\"Make sure diff report reports HDU name and ver if same in files\"\"\"\n857-    path1 = tmp_path / \"test1.fits\"\n858-    path2 = tmp_path / \"test2.fits\"\n859-\n860-    hdulist = HDUList([PrimaryHDU(), ImageHDU(data=np.zeros(5), name=\"SCI\")])\n861-    hdulist.writeto(path1)\n862-    hdulist[1].data[0] = 1\n863-    hdulist.writeto(path2)\n864-\n865-    diff = FITSDiff(path1, path2)\n866-    assert \"Extension HDU 1 (SCI, 1):\" in diff.report()\n867-\n868-\n869-def test_fitsdiff_no_hdu_name(tmp_path):\n870-    \"\"\"Make sure diff report doesn't report HDU name if not in files\"\"\"\n871-    path1 = tmp_path / \"test1.fits\"\n872-    path2 = tmp_path / \"test2.fits\"\n873-\n874-    hdulist = HDUList([PrimaryHDU(), ImageHDU(data=np.zeros(5))])\n875-    hdulist.writeto(path1)\n876-    hdulist[1].data[0] = 1\n--\n879-    diff = FITSDiff(path1, path2)\n880-    assert \"Extension HDU 1:\" in diff.report()\n881-\n882-\n883-def test_fitsdiff_with_names(tmp_path):\n884:    \"\"\"Make sure diff report doesn't report HDU name if not same in files\"\"\"\n885-    path1 = tmp_path / \"test1.fits\"\n886-    path2 = tmp_path / \"test2.fits\"\n887-\n888-    hdulist = HDUList([PrimaryHDU(), ImageHDU(data=np.zeros(5), name=\"SCI\", ver=1)])\n889-    hdulist.writeto(path1)\n890-    hdulist[1].name = \"ERR\"\n891-    hdulist.writeto(path2)\n892-\n893-    diff = FITSDiff(path1, path2)\n894-    assert \"Extension HDU 1:\" in diff.report()\n895-\n896-\n897-def test_rawdatadiff_diff_with_rtol(tmp_path):\n898-    \"\"\"Regression test for https://github.com/astropy/astropy/issues/13330\"\"\"\n899-    path1 = tmp_path / \"test1.fits\"\n900-    path2 = tmp_path / \"test2.fits\"\n901-    a = np.zeros((10, 2), dtype=\"float32\")\n902-    a[:, 0] = np.arange(10, dtype=\"float32\") + 10\n903-    a[:, 1] = np.arange(10, dtype=\"float32\") + 20\n904-    b = a.copy()", "command": "cd /tmp/tmp1_6k5dg_/astropy && grep -n -A 20 -B 5 \"identical.*file\\|same.*file\" astropy/io/fits/tests/test_diff.py", "error": false, "timeout": false, "metadata": {"exit_code": 0, "pid": -1, "username": "juan-all-hands", "hostname": "juan-dev", "working_dir": "/tmp/tmp1_6k5dg_/astropy", "py_interpreter_path": "/home/juan-all-hands/v1/benchmarks/.venv/bin/python", "prefix": "", "suffix": "\n[The command completed with exit code 0.]"}}, "action_id": "466145d6-d6bd-4c77-8700-dff7d9866312"}